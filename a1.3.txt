// init aggs_gb_A & aggs_gb_B && aggs_gb_C && aggs

for (r_A <- R_TRIE){
	
	// init aggs_gb_A

	for(r_B <- r_A.LIST){

		// init par_aggs_gb_B
		
		for(r_C <- r_B.LIST){
			aggs_gb_C[r_C.C][0] += 1	// count(C) ++
			aggs_gb_C[r_C.C][1] += r_A	// sum(A) for every C
			aggs_gb_C[r_C.C][2] += r_B	// sum(B) for every C

			par_aggs_gb_B[0] += 1		// count(C) for every B
			par_aggs_gb_B[1] += r_C.C	// sum(C) per B
		}

		aggs_gb_B[r_B.B][0] += par_aggs_gb_B[0]		// sum(1) group by B
		aggs_gb_B[r_B.B][1] += r_A.A 				// sum(A) group by B
		aggs_gb_B[r_B.B][2] += par_aggs_gb_B[1]		// sum(C) group by B

		par_aggs_gb_A[0] += par_aggs_gb_B[0]			// count(A)
		par_aggs_gb_A[1] += r_B.B 						// "sum(B) for each A"
		par_aggs_gb_A[2] += par_aggs_gb_B[1]			// "sum(C) for each A"
		par_aggs_gb_A[3] += r_B.B * par_aggs_gb_B[1]	// sum(B*C) for each A = "sum(C) per B" * B
	}

	aggs_gb_A[r_A.A][0] += par_aggs_gb_A[0]		// sum(1) group by A
	aggs_gb_A[r_A.A][1] += par_aggs_gb_A[1]		// sum(B) group by A
	aggs_gb_A[r_A.A][2] += par_aggs_gb_A[2]		// sum(C) group by A

	aggs[0] += par_aggs_gb_A[0]					// sum(1)
	aggs[1] += r_A.A * par_aggs_gb_A[0]			// sum(A) = sumation of count(A) * A 
	aggs[2] += par_aggs_gb_A[1]					// sum(B) = sumation of "sum(B) for each A"
	aggs[3] += par_aggs_gb_A[2]					// sum(C) = sumation of "sum(C) for each A"
	aggs[4] += r_A.A * par_aggs_gb_A[1]			// sum(A*B) = sumation of [[sum(B) for each A] * A]
	aggs[5] += r_A.A * par_aggs_gb_A[2]			// sum(A*B) = sumation of [[sum(C) for each A] * A]
	aggs[6] += par_aggs_gb_A[3]					// sum(B*C) = sumation of "sum(B*C) for each A"
}